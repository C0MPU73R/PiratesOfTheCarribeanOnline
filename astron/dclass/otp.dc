from direct.distributed import DistributedObject/AI/UD
from otp.distributed import CentralLogger/AI/UD
from otp.uberdog import OtpAvatarManager/AI/UD
from otp.uberdog import DistributedChatManager/AI/UD

dclass CentralLogger : DistributedObject {
  sendMessage(string(0-256), string(0-256), uint32, uint32) clsend;
  logAIGarbage() airecv;
}

dclass OtpAvatarManager : DistributedObject {
  online();
  requestAvatarList(uint32) airecv clsend;
  rejectAvatarList(uint32);
  avatarListResponse(blob);
  requestAvatarSlot(uint32, uint32, uint8) clsend airecv;
  rejectAvatarSlot(uint32, uint32, uint8);
  avatarSlotResponse(uint32, uint8);
  requestPlayAvatar(uint32, uint32, uint32) clsend airecv;
  rejectPlayAvatar(uint32, uint32);
  playAvatarResponse(uint32, uint32, uint8, uint8);
  rejectCreateAvatar(uint32);
  createAvatarResponse(uint32, uint32, uint8, uint8);
  requestRemoveAvatar(uint32, uint32, uint32, string(0-256)) airecv clsend;
  rejectRemoveAvatar(uint32);
  removeAvatarResponse(uint32, uint32);
  requestShareAvatar(uint32, uint32, uint32, uint8) airecv clsend;
  rejectShareAvatar(uint32);
  shareAvatarResponse(uint32, uint32, uint8);
};

dclass DistributedChatManager : DistributedObject {
  online();
  adminChat(uint32, string);
  setAvatarLocation(uint32, uint32, uint32);
  setAvatarCrew(uint32, uint32);
  setAvatarGuild(uint32, uint32);
  chatParentId(uint32) airecv clsend;
  chatZoneId(uint32) airecv clsend;
  chatFace(uint32) airecv clsend;
  chatEmote(uint16) airecv clsend;
  chatEmoteTarget(uint32) airecv clsend;
  chatIndex(uint16) airecv clsend;
  chatString(string(0-256)) airecv clsend;
  chatToAvatarIndex : chatZoneId, chatIndex;
  chatParentZoneFaceEmoteWithTargetIndex : chatParentId, chatZoneId, chatFace, chatEmote, chatEmoteTarget, chatIndex;
  chatToAvatarString : chatZoneId, chatString;
  chatParentZoneFaceEmoteWithTargetString : chatParentId, chatZoneId, chatFace, chatEmote, chatEmoteTarget, chatString;
  speedChatTo(uint16) airecv clsend;
  speedChatFrom(uint32, uint16);
  speedChatCustomTo(uint16) airecv clsend;
  speedChatCustomFrom(uint32, uint16);
  whisperSCTo(uint32, uint16) airecv clsend;
  whisperSCFrom(uint32, uint16);
  whisperSCCustomTo(uint32, uint16) airecv clsend;
  whisperSCCustomFrom(uint32, uint16);
  whisperSCEmoteTo(uint32, uint16) airecv clsend;
  whisperSCEmoteFrom(uint32, uint16);
  whisperIgnored(uint32);
};